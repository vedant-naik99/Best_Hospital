best("SC", "heart attack")
?best
??best
> outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
> head(outcome)
> outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")head(outcome)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
sapply(outcome)
sapply(outcome)
ncol(outcome)
nrow(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
best <- function(state, outcome) {
source('~/.active-rstudio-document')
source('~/hospital/best.R')
)
source('~/hospital/best.R')
best("SC", "heart attack")
names(X)[c(11, 17, 23)] <- outcomevector
names(X)[c(11, 17, 23)]
X <- x[x$State== state,]
names(X)[c(11, 17, 23)]
names(outcome)[c(11, 17, 23)]
source('~/hospital/rankhospital.R')
source('~/hospital/rankhospital.R')
source('~/hospital/best.R')
source('~/hospital/rankall.R')
best("SC", "heart attack")
best("NY", "pneumonia")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
source('~/hospital/rankhospital.R')
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
source('~/hospital/best.R')
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url = url,destfile = "data.csv",method = curl)
download.file(url = url,destfile = "data.csv")
read.table(data.csv,sep = ",",header = TRUE)
read.xlsx(getdata_data_ss06hid.xlsx,sheet index = 1,header = TRUE)
ls()
library(readxl)
getdata_data_ss06hid <- read_excel("~/getdata_data_ss06hid.csv")
View(getdata_data_ss06hid)
library(readr)
getdata_data_ss06hid <- read_csv("~/getdata_data_ss06hid.csv")
View(getdata_data_ss06hid)
data<-getdata_data_ss06hid
data
data$VAL
nrows(data,data$VAL="24")
nrows(data,data$VAL)
data$VAL="24"
f=data$VAL="24"
f<-data$VAL="24"
g<-data$VAL
g
data<-getdata_data_ss06hid
k<-data[data$VAL]
k<-data[data$VAL,!is.na(data)]
k<-is.na(data)
k
l<-!is.na(data)
l
sum(data$VAL==24 & !is.na(data$VAL))
library(xlsx)
library(.xlsx)
install.packages("xlsx")
library(xlsx)
dir()
setwd("~/")
dir()
xcel<-read_xlsx("~/getdata_data_DATA.gov_NGAP.xlsx",sheet = 1,header= TRUE,colIndex=7:15,rowIndex=18:23)
xcel<-read_xlsx("~/getdata_data_DATA.gov_NGAP.xlsx",sheet = 1,ncol=7:15,nrows=18:23)
xcel<-read_xlsx("~/getdata_data_DATA.gov_NGAP.xlsx",sheet = 1,col(c(7:15)),row(c(18:23)))
xcel<-read_xlsx("~/getdata_data_DATA.gov_NGAP.xlsx",sheet = 1)
xcel
library(readxl)
getdata_data_DATA_gov_NGAP <- read_excel("getdata_data_DATA.gov_NGAP.xlsx")
View(getdata_data_DATA_gov_NGAP)
xcel<-getdata_data_DATA_gov_NGAP
xcel
colIndex<-2:3
colIndex<-7:15
rowIndex<-18:23
n<-xcel[rowIndex,colIndex]
n
sum(n$Zip*n$Ext,na.rm=T)
library(xml)
download.packages("xml")
install.packages("XML")
library(xml)
library(XML)
doc<-xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",useInternalNodes = TRUE)
doc<-xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",useInternalNodes = TRUE)
doc<-xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(url,useInternalNodes = TRUE)
doc <-  xmlTreeParse("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",useInternal = TRUE)
rootnode <- xmlRoot(doc)
sum(xpathSApply(rootnode,"//zipcode",xmlValue) == 21231)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",destfile = alldata.csv)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",destfile = doc)
dir()
fread(getdata_data_ss06pid.csv)
install.packages("data.table")
library(data.table)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv','./Q5.csv','curl')
DT = fread('./Q5.csv')
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
install.packages("RMySQL")
library(RMySQL)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("rhdf5")
library(rhdf5)
install.packages("sqldf")
library(sqldf)
library(plyr)
download.packages(plyr)
download.packages("plyr")
install.packages("plyr")
library(plyr)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv','./data.csv','curl')
data<-read.csv("./data.csv")
head(data)
sum(col(data))
al<-filter(data,data$ACR="3"&& data$AGS="6")
al<-filter(data,ACR>=3 & AGS>=6)
al<-filter(data,data$ACR>=3 & data$AGS>=6)
al<-filter(data,data$ACR>=3 & data$AGS>=6,na.rm=TRUE)
library(dplyr)
install.packages("dplyr")
library(dplyr)
al<-filter(data,ACR>=3 & AGS>=6)
which(al)
al<-as.logical(al)
al<-as.data.frame.logical(al)
which(al)
al<-as.logical(al)
al<-filter(data,ACR>=3 & AGS>=6)
al
head(al,n=3)
agricultureLogical <- Q1$ACR == 3 & Q1$AGS == 6
agricultureLogical <- dat$ACR == 3 & data$AGS == 6
agricultureLogical <- data$ACR == 3 & data$AGS == 6
data
agricultureLogical <- data$ACR == 3 & data$AGS == 6
which(agricultureLogical)
install.packages(jpeg)
library(jpeg)
install.packages("jpeg")
library(jpeg)
Q2Url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
Q2Path = '/home/cabunic/Data Science/Coursera/3 - Getting and Cleaning Data/Week 3/Q2.jpg'
download.file(Q2Url, Q2Path, mode = 'wb')
Q2 <- readJPEG(Q2Path, native = TRUE)
Q2Url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
Q2Path = './Q2.jpg'
download.file(Q2Url, Q2Path, mode = 'wb')
Q2 <- readJPEG(Q2Path, native = TRUE)
quantile(Q2, probs = c(0.3, 0.8))
data
install.packages("stringr")
strsplit("wgtp")
strsplit("wgtp","/")
strsplit(names("wgtp","/"))
strsplit(names("wgtp"),"/"))
strsplit(names("wgtp"),"/")
d<-strsplit("wgtp","/")
d[123]
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv','./data1.csv','curl')
data1<-read.csv("./data1.csv")
data1
colnames(data1)
k<-data1[data1$Gross.domestic.product.2012]
k<-data1$Gross.domestic.product.2012
k
head(k)
colnames(data1)
head(data)
head(data1)
data1$X.3
sumcol(data1$X.3)
colSums(data1$X.3,na.rm = TRUE)
K<-data1$X.3
k<-!is.na(k)
k
install.packages(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
grep("^2012",sampleTimes)
sum(grep("^2012",sampleTimes))
sum(date("2012"))
sum(date())
amzn2012 <- sampleTimes[grep("^2012", sampleTimes)]
nrows(amzn2012)
NROW(amzn2012)
